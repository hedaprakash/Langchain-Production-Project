services:

  redis:
    image: redis:latest
    container_name: credis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5


  postgres:
    build: ./postgres
    image: langpostgres:latest
    container_name: cpostgres
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: vectordb

  langservice2dependencies:
    build:
      context: .
      dockerfile: ./service2/Dockerfile.dependencies
    image: langservice2dependencies:latest
    container_name: langservice2dependencies

  service2:
    build: ./service2
    image: langservice2:latest
    container_name: cservice2
    ports:
      - "5000:80"
    depends_on:
      - postgres
      - langservice2dependencies

  langservice3dependencies:
    build:
      context: .
      dockerfile: ./service3/Dockerfile.dependencies
    image: langservice3dependencies:latest
    container_name: langservice3dependencies

  service3:
    build: ./service3
    image: langservice3:latest
    container_name: cservice3
    ports:
      - "8000:80"
    env_file:
      - .env
    depends_on:
      - postgres
      - langservice3dependencies

  frontend:
    build: ./frontend
    image: langfrontend:latest
    container_name: cfrontend
    ports:
      - "3000:3000"

  pgadmin:
    image: dpage/pgadmin4
    container_name: cpgadmin
    depends_on:
      - postgres
    ports:
      - 6000:80
    environment:
      PGADMIN_DEFAULT_EMAIL: test@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

volumes:
  redis_data:
  redis2_data:
